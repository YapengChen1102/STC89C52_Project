C51 COMPILER V9.54   CT107D_LIB                                                            06/19/2025 16:51:45 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE CT107D_LIB
OBJECT MODULE PLACED IN .\Objects\CT107D_Lib.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE CT107D_Lib.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listing
                    -s\CT107D_Lib.lst) TABS(2) OBJECT(.\Objects\CT107D_Lib.obj)

line level    source

   1          /**
   2            * 特殊功能寄存器、I/O口地址
   3            * CT107D实验板的矩阵按键需要P4.2（0xC2）和P4.4 （0xC4）
   4            * 本项目是为了实现模拟电话按键
   5            **/
   6          
   7          sfr    P0 = 0x80;
   8          sfr    P2 = 0xA0;
   9          sfr    P3 = 0xB0;
  10          sfr    P4 = 0xC0;
  11          
  12          sbit P3_0 = 0xB0;
  13          sbit P3_1 = 0xB1;
  14          sbit P3_2 = 0xB2;
  15          sbit P3_3 = 0xB3;
  16          sbit P3_4 = 0xB4;
  17          sbit P3_5 = 0xB5;
  18          sbit P3_6 = 0xB6;
  19          sbit P3_7 = 0xB7;
  20          
  21          sbit P4_2 = 0xC2;
  22          sbit P4_4 = 0xC4;
  23          
  24          /**
  25            * EnableWrite 控制链表是否写入
  26            * row 全局变量 获取按下key的行坐标 
  27            * row 全局变量 获取按下key的列坐标
  28            * keyboard 使用二维数组 模拟键盘按键 
  29            * tube_label 控制八位数码管的选通
  30            * NULL 空指针 指向0x00
  31            */
  32          
  33          unsigned int EnableWrite = 0;
  34          unsigned int row = 114;
  35          unsigned int column = 514;
  36          unsigned int keyboard[4][4] = {
  37                        0xF9, 0xA4, 0xB0, 0xFF,
  38                        0x99, 0x92, 0x82, 0xFF,
  39                        0xF8, 0x80, 0x90, 0xFF,
  40                        0xC0, 0xC0, 0xFF, 0xFF
  41                                        };
  42          
  43          int tube_label[] = {0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80};
  44          
  45          #define NULL 0x00;
  46          
  47          /**
  48            * 定义循环链表(环)
  49            * 测试输入：0000 0000
  50            * 按键操作：1
  51            * 结果显示：0000 0001
  52            */
  53          
  54          typedef struct ring
C51 COMPILER V9.54   CT107D_LIB                                                            06/19/2025 16:51:45 PAGE 2   

  55          {
  56            unsigned int Data;
  57            struct ring *Next;
  58          }RING;
  59          
  60          RING Node1;
  61          RING Node2;
  62          RING Node3;
  63          RING Node4;
  64          RING Node5;
  65          RING Node6;
  66          RING Node7;
  67          RING Node8;
  68          
  69          RING *ring_init(void)
  70          {
  71   1        RING *head;
  72   1        Node1.Data = 0xFF;
  73   1        Node2.Data = 0xFF;
  74   1        Node3.Data = 0xFF;
  75   1        Node4.Data = 0xFF;
  76   1        Node5.Data = 0xFF;
  77   1        Node6.Data = 0xFF;
  78   1        Node7.Data = 0xFF;
  79   1        Node8.Data = 0xFF;
  80   1        
  81   1        Node1.Next = &Node2;
  82   1        Node2.Next = &Node3;
  83   1        Node3.Next = &Node4;
  84   1        Node4.Next = &Node5;
  85   1        Node5.Next = &Node6;
  86   1        Node6.Next = &Node7;
  87   1        Node7.Next = &Node8;
  88   1        Node8.Next = &Node1;
  89   1        
  90   1        head = &Node1;
  91   1        return head;
  92   1      }
  93          
  94          /**
  95            * 延时函数 为实现按键消抖，数码管消影
  96            */
  97          void delay(unsigned int ms)
  98          {
  99   1        unsigned i,j;
 100   1        for(i=0; i<ms; i++)
 101   1        {
 102   2          for(j=0; j<120; j++);
 103   2        }
 104   1      }
 105          
 106          /**
 107            * 给链表写入数据
 108            * 返回的头指针是原先链表首节点的指针域
 109            * demo： 
 110            *           |-----------------------------|
 111            *           v                             |
 112            * 创建节点 Node 1 -> Node -> Node 3 -> Node4.
 113            *           ^
 114            *           |
 115            *          head
 116            *
C51 COMPILER V9.54   CT107D_LIB                                                            06/19/2025 16:51:45 PAGE 3   

 117            *           |-----------------------------|
 118            *           v                             |
 119            * 调用函数 Node 1 -> Node 2 -> Node 3 -> Node4.
 120            *                    ^
 121            *                    |
 122            *                   head
 123            */
 124          
 125          RING *write(RING *head, unsigned int written_Data)
 126          {
 127   1        RING *pr = head;
 128   1        pr->Data = written_Data;
 129   1        return pr->Next;
 130   1      }
 131          
 132          /**
 133            * 在八位数码管上显示
 134            * 输入是循环链表（环）的头指针 
 135            */
 136          
 137          void display(RING *head)
 138          {
 139   1        int loc;
 140   1        RING *pr = head;
 141   1          for(loc=0; loc<=7; loc++)
 142   1          {
 143   2            P0 = tube_label[loc];
 144   2            P2 = (P2 & 0x1F) | 0xC0;
 145   2            P2 &= 0x1F;
 146   2            
 147   2            P0 = pr->Data;
 148   2            P2 = (P2 & 0x1F) | 0xE0;
 149   2            P2 &= 0x1F;
 150   2            pr = pr->Next;
 151   2            delay(10);
 152   2          }
 153   1      }
 154          
 155          /**
 156            * 按键检测模块 结果更新row, column
 157            * goto 真好用
 158            */
 159          
 160          void get_key(void)
 161          {
 162   1      
 163   1        P3 = (P3 & 0xC0) | 0x0F;
 164   1        P4 = (P4 & 0xEB) | 0x00;
 165   1        delay(0);
 166   1        if( P3_0 == 0 ) { row = 0; goto SEG1;}
 167   1        if( P3_1 == 0 ) { row = 1; goto SEG1;}
 168   1        if( P3_2 == 0 ) { row = 2; goto SEG1;}
 169   1        if( P3_3 == 0 ) { row = 3; goto SEG1;}
 170   1        return;
 171   1        SEG1:
 172   1        
 173   1        P3 = ( P3 & 0xC0) | 0x30;
 174   1        P4 = ( P4 & 0xEB) | 0x14;
 175   1        if( P3_4 == 0 ) {while(P3_4==0); column = 3; goto SEG2;}
 176   1        if( P3_5 == 0 ) {while(P3_5==0); column = 2; goto SEG2;}
 177   1        if( P4_2 == 0 ) {while(P4_2==0); column = 1; goto SEG2;}
 178   1        if( P4_4 == 0 ) {while(P4_4==0); column = 0; goto SEG2;}
C51 COMPILER V9.54   CT107D_LIB                                                            06/19/2025 16:51:45 PAGE 4   

 179   1        return;
 180   1        SEG2:
 181   1        {EnableWrite = 1; return;}
 182   1        
 183   1      }
 184          
 185          
 186          /**
 187            * 这里是按键识别和循环链表操作的耦合模块
 188            * 就是为了实现按什么键实现什么样的功能
 189            * 模拟电话按键及功能：
 190            * |-----------|
 191            * | 0000 0000 |
 192            * |-----------|
 193            * | 1   2   3 |
 194            * | 4   5   6 |
 195            * | 7   8   9 |
 196            * | *   0   # |
 197            * |-----------|
 198            *
 199            * 按下* 其中_是熄灭
 200            * |-----------|
 201            * | ____ ___0 |
 202            * |-----------|
 203            * | 1   2   3 |
 204            * | 4   5   6 |
 205            * | 7   8   9 |
 206            * | *   0   # |
 207            * |-----------|
 208            *
 209            * 按下#         
 210            * |-----------|
 211            * | ____ ____ |
 212            * |-----------|
 213            * | 1   2   3 |
 214            * | 4   5   6 |
 215            * | 7   8   9 |
 216            * | *   0   # |
 217            * |-----------|
 218            **/
 219          
 220          
 221          RING *write_key(RING *head)
 222          {
 223   1        RING *p = head;
 224   1        int j = 0;
 225   1        if(EnableWrite == 0) { return head; }
 226   1        
 227   1        if(row==3 && (column==0 || column==2))
 228   1        {
 229   2          for(j=1; j<=7; j++)
 230   2          {
 231   3            p->Data = 0xFF;
 232   3            p = p->Next;
 233   3          }
 234   2          if(column == 0) {p->Data = 0xC0; return head;}
 235   2          else {p->Data = 0xFF; return head;}
 236   2        }
 237   1        
 238   1        if(row<=3 && column<=3)
 239   1        {
 240   2          head = write(head, keyboard[row][column]);
C51 COMPILER V9.54   CT107D_LIB                                                            06/19/2025 16:51:45 PAGE 5   

 241   2          EnableWrite = 0;
 242   2        }
 243   1        return head;
 244   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    584    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     94      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
